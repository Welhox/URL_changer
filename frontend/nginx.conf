server {server {

    listen 80;    listen 3000;

    server_name localhost;    server_name localhost;

    root /usr/share/nginx/html;    root /usr/share/nginx/html;

    index index.html;    index index.html;



    # Handle React Router (SPA)    # Enable gzip compression

    location / {    gzip on;

        try_files $uri $uri/ /index.html;    gzip_vary on;

    }    gzip_min_length 1024;

    gzip_proxied expired no-cache no-store private auth;

    # API proxy (if serving from same domain)    gzip_types

    location /api/ {        text/plain

        proxy_pass http://backend:8000;        text/css

        proxy_set_header Host $host;        text/xml

        proxy_set_header X-Real-IP $remote_addr;        text/javascript

    }        application/javascript

        application/xml+rss

    # Security headers        application/json;

    add_header X-Frame-Options "SAMEORIGIN" always;

    add_header X-Content-Type-Options "nosniff" always;    # Security headers

    add_header X-XSS-Protection "1; mode=block" always;    add_header X-Frame-Options "SAMEORIGIN" always;

    add_header X-XSS-Protection "1; mode=block" always;

    # Gzip compression    add_header X-Content-Type-Options "nosniff" always;

    gzip on;    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    gzip_types text/css application/javascript application/json;    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

}
    # Handle client-side routing
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Static assets with long-term caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}